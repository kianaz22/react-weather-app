{"version":3,"sources":["components/Search.js","components/Hourly.js","components/Daily.js","components/Condition.js","components/Particle.js","components/AirQuality.js","components/Conditions.js","components/Data.js","components/Current.js","App.js","reportWebVitals.js","index.js"],"names":["Search","city","handleChange","matches","handleClick","handleBlur","data","useState","clas","setClas","className","onClick","type","value","placeholder","location","name","country","onChange","e","target","onBlur","map","m","i","Hourly","tempUnit","hours","forecast","forecastday","hours2","now","moment","localtime","format","document","querySelector","scrollLeft","hr","alt","src","condition","icon","Math","round","filter","Daily","next","slice","push","date","n","day","clone","add","text","style","visibility","Condition","bgColor","backgroundColor","Particle","color","fontSize","borderBottom","AirQuality","co","so2","pm10","pm25","url","qualityIndex","setQualityIndex","quality","setQuality","getLabel","getNo2Color","no2","chartData","datasets","borderWidth","rotation","useEffect","fetch","then","res","json","aqi","console","log","options","cutout","events","plugins","tooltip","enabled","fontWeight","opacity","width","toFixed","o3","Conditions","today","setCity","size","current","humidity","uv","astro","sunrise","sunset","Data","Current","toUpperCase","App","setData","setMatches","setTempUnit","noPosition","fetchData","navigator","geolocation","getCurrentPosition","position","fetchDataByPostion","coords","latitude","longitude","error","enableHighAccuracy","catch","err","lat","long","setTimeout","length","response","textContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.badf4180.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { FaSearch,FaTimes } from 'react-icons/fa'\r\nconst Search = ({ city,handleChange,matches,handleClick,handleBlur,data }) => {\r\n    const [clas, setClas] = useState('zero')\r\n   \r\n    return (\r\n        <div className='search-container' >\r\n            <button className='search-button' onClick={() => {clas==='full' ? setClas('zero') : setClas('full')}} >\r\n                <FaSearch className='icon' />\r\n            </button>\r\n            <div className='search' >\r\n                <input type='text' value={city} placeholder={`${data.location.name}, ${data.location.country}`}\r\n                      className={clas} onChange={e => handleChange(e.target.value)} onBlur={()=>handleBlur()} />\r\n                <button className='clear-button' onClick={()=>handleBlur()}><FaTimes /></button>\r\n                {matches && <div className='matches-container'>{matches.map((m, i) =>\r\n                    <div onClick={e => handleClick(e)}\r\n                        key={i}>{m.name}</div>)}\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { FaChevronRight, FaChevronLeft } from 'react-icons/fa'\r\nconst Hourly = ({ data, tempUnit }) => {\r\n    const hours = data.forecast.forecastday[0]['hour']\r\n    const hours2 = data.forecast.forecastday[1]['hour']\r\n\r\n    const now = moment(data.location.localtime, 'YYYY-MM-DD HH:mm').format('HH')\r\n\r\n    const scrollRight = () => {\r\n        if (document.querySelector('.hourly')) {\r\n            const hourly = document.querySelector('.hourly')\r\n            hourly.scrollLeft += 450\r\n        }\r\n    }\r\n    const scrollLeft = () => {\r\n        if (document.querySelector('.hourly')) {\r\n            const hourly = document.querySelector('.hourly')\r\n            hourly.scrollLeft -= 450\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className='hourly-container'>\r\n            <h2>Hourly</h2>\r\n            <div className='scroll-container'>\r\n                <button onClick={scrollLeft}><FaChevronLeft /></button>\r\n                <div className='hourly'>\r\n                    {hours.map((hr, i) =>\r\n                        <div key={i}>\r\n                            <div><img alt='condition' src={hr.condition.icon} /></div>\r\n                            <div>{Math.round(hr[`temp_${tempUnit}`])}°</div>\r\n                            <div>{i == now ? 'Now' : (i === 12 ? '12PM' : (i < 12 ? i + 'AM' : (i - 12) + 'PM'))}</div>\r\n                        </div>).filter((hr, i) => i >= now)}\r\n                    {hours2.map((hr, i) =>\r\n                        <div key={i}>\r\n                            <div><img alt='condition' src={hr.condition.icon} /></div>\r\n                            <div>{Math.round(hr[`temp_${tempUnit}`])}°</div>\r\n                            <div>{i === 12 ? '12PM' : (i === 0 ? '12AM' : (i < 12 ? i + 'AM' : (i - 12) + 'PM'))}</div>\r\n                        </div>).filter((hr, i) => i < now)}\r\n                </div>\r\n                <button onClick={scrollRight}><FaChevronRight /></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hourly\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { FaTint } from 'react-icons/fa'\r\n\r\nconst Daily = ({ data, tempUnit }) => {\r\n    \r\n    const next = data.forecast.forecastday.slice(1)\r\n    next.push(data.forecast.forecastday[1])\r\n    next.push(data.forecast.forecastday[0])\r\n    next.push(data.forecast.forecastday[2])\r\n\r\n    const date = moment(data.location.localtime, 'YYYY-MM-DD HH:mm')\r\n   \r\n    return (\r\n        <div className='daily-container'>\r\n            <h2>Daily</h2>\r\n            <div className='daily'>\r\n                {next.map((n, i) =>\r\n\r\n                    <div key={i}>\r\n                        <div className='left'>\r\n                            <img alt='condition' src={n.day.condition.icon} />\r\n                        </div>\r\n                        <div>\r\n                            <div >{date.clone().add(i + 1, 'd').format('dddd')}</div>\r\n                            <div className='condition'>{n.day.condition.text}</div>\r\n                        </div>\r\n                        <div style={{ visibility: n.day['daily_chance_of_rain'] > 0 ? 'visible' : 'hidden' }}>\r\n                            <FaTint className='rain' />{n.day['daily_chance_of_rain']}%\r\n                        </div>\r\n                        <div>\r\n                            <span className='transparent'>{Math.round(n.day[`mintemp_${tempUnit}`])}°</span>/\r\n                            {Math.round(n.day[`maxtemp_${tempUnit}`])}°\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Daily\r\n","import React from 'react'\r\n\r\nconst Condition = ({ icon, data, text, bgColor }) => {\r\n    return (\r\n        <div>\r\n            <div className='icon-wrapper'\r\n                style={{ backgroundColor: bgColor }}>\r\n                {icon}\r\n            </div>\r\n            <div className='condition-data'>\r\n                <div>{data}</div>\r\n                <div>{text}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Condition\r\n","import React from 'react'\r\n\r\nconst Particle = ({ color,value,Particle }) => {\r\n    return (\r\n        <div>\r\n          <div style={{ fontSize:'1.2em', borderBottom: `2px solid ${color}` }}>{value}</div>\r\n          <div>{Particle}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Particle\r\n","import { useEffect, useState } from 'react'\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport Particle from './Particle'\r\n\r\nconst AirQuality = ({ city }) => {\r\n\r\n  const url = `https://api.weatherbit.io/v2.0/current/airquality?city=${city}&key=5f590d6bda074732b090b04560e647c1`\r\n  const [qualityIndex, setQualityIndex] = useState('')\r\n  const [quality, setQuality] = useState('')\r\n\r\n  const getLabel = (qualityIndex) => {\r\n    if (qualityIndex < 51)\r\n      return ['Good', 'Air quality is satisfactory, and air pollution poses little or no risk.'];\r\n    else if (qualityIndex < 101)\r\n      return [\"Moderate\", \"Air quality is acceptable. However, there may be a risk for some people, particularly those who are unusually sensitive to air pollution.\"];\r\n    else if (qualityIndex < 151)\r\n      return [\"Unhealthy for sensitive groups\", \"Members of sensitive groups may experience health effects. The general public is less likely to be affected.\"];\r\n    else if (qualityIndex < 201)\r\n      return [\"Unhealthy\", \"Some members of the general public may experience health effects; members of sensitive groups may experience more serious health effects.\"];\r\n    else if (qualityIndex < 301)\r\n      return [\"Very Unhealthy\", \"Health alert: The risk of health effects is increased for everyone.\"];\r\n  }\r\n  const getPm25Color = (pm25) => {\r\n    if (pm25 < 12)\r\n      return '#1cb422'\r\n    else if (pm25 < 36)\r\n      return 'rgb(254,254,0)'\r\n    else if (pm25 < 56)\r\n      return 'rgb(255,126,0)'\r\n    else if (pm25 < 151)\r\n      return 'rgb(255,21,21)'\r\n    else if (pm25 < 424)\r\n      return 'rgb(176,58,117)'\r\n    return 'rgba(0,0,0,.4)'\r\n  }\r\n  const getPm10Color = (pm10) => {\r\n    if (pm10 < 54)\r\n      return '#1cb422'\r\n    else if (pm10 < 154)\r\n      return 'rgb(254,254,0)'\r\n    else if (pm10 < 254)\r\n      return 'rgb(255,126,0)'\r\n    else if (pm10 < 354)\r\n      return 'rgb(255,21,21)'\r\n    else if (pm10 < 424)\r\n      return 'rgb(176,58,117)'\r\n    return 'rgba(0,0,0,.4)'\r\n  }\r\n  const getSo2Color = (so2) => {\r\n    if (so2 < 0.1)\r\n      return '#1cb422'\r\n    else if (so2 < 0.2)\r\n      return 'rgb(254,254,0)'\r\n    else if (so2 < 1)\r\n      return 'rgb(255,126,0)'\r\n    else if (so2 < 3)\r\n      return 'rgb(255,21,21)'\r\n    else if (so2 < 5)\r\n      return 'rgb(176,58,117)'\r\n    return 'rgba(0,0,0,.4)'\r\n  }\r\n  const getNo2Color = (no2) => {\r\n    if (no2 < 0.1)\r\n      return '#1cb422'\r\n    else if (no2 < 5)\r\n      return 'rgb(254,254,0)'\r\n    else if (no2 > 5)\r\n      return 'rgb(176,58,117)'\r\n    return 'rgba(0,0,0,.4)'\r\n  }\r\n  const getCoColor = (co) => {\r\n    if (co < 9)\r\n      return '#1cb422'\r\n    else if (co < 10)\r\n      return 'rgb(254,254,0)'\r\n    else if (co >= 10)\r\n      return 'rgb(176,58,117)'\r\n    return 'rgba(0,0,0,.4)'\r\n  }\r\n  const chartData = {\r\n    datasets: [\r\n      {\r\n        data: [1, 1, 1, 1, 1, 1],\r\n        backgroundColor: [\r\n          'white',\r\n          getLabel(qualityIndex)[0] === 'Good' ? '#1cb422' : '#f3f3f3',\r\n          getLabel(qualityIndex)[0] === 'Moderate' ? 'rgb(254,254,0)' : '#f3f3f3',\r\n          getLabel(qualityIndex)[0] === 'Unhealthy for sensitive groups' ? 'rgb(255,126,0)' : '#f3f3f3',\r\n          getLabel(qualityIndex)[0] === 'Unhealthy' ? 'rgb(255,21,21)' : '#f3f3f3',\r\n          getLabel(qualityIndex)[0] === 'Very Unhealthy' ? 'rgb(176,58,117)' : '#f3f3f3',\r\n        ],\r\n        borderWidth: 0,\r\n        rotation: 150,\r\n      },\r\n    ],\r\n  }\r\n  const options = {\r\n    cutout: '75%',\r\n    events: [],\r\n    plugins: {\r\n      tooltip: { enabled: false }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setQualityIndex(res.data[0].aqi);\r\n        setQuality(res.data[0])\r\n        console.log(res)\r\n      })\r\n  }, [city])\r\n\r\n  return (\r\n    <div className='air-quality-container'>\r\n      <h2>Air Quality</h2>\r\n      <div className='air-quality'>\r\n\r\n        <div>\r\n          <div className='icon-wrapper'>\r\n            <Doughnut data={chartData} options={options} />\r\n            <div>\r\n              <div style={{ fontWeight: '600', fontSize: '1.2em' }}>{qualityIndex}</div>\r\n              <div style={{ fontSize: '.7em', fontWeight: '600', opacity: '.5' }}>AQI</div>\r\n            </div>\r\n          </div>\r\n          <div className='condition-data'>\r\n            <div>{getLabel(qualityIndex)[0]}</div>\r\n            <div>{getLabel(qualityIndex)[1]}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ width: '100%' }} >\r\n          <Particle Particle={'PM25'} value={Math.round(quality.pm25)} color={getPm25Color(quality.pm25)} />\r\n\r\n          <Particle Particle={'PM10'} value={Math.round(quality.pm10)} color={getPm10Color(quality.pm10)} />\r\n\r\n          <Particle Particle={'SO2'} value={(quality.so2 / 1000).toFixed(2)} color={getSo2Color((quality.so2 / 1000).toFixed(2))} />\r\n\r\n          <Particle Particle={'NO2'} value={(quality.no2 / 1000).toFixed(2)} color={getNo2Color((quality.no2 / 1000).toFixed(2))} />\r\n\r\n          <Particle Particle={'O3'} value={(quality.o3 / 1000).toFixed(2)} color={getNo2Color((quality.o3 / 1000).toFixed(2))} />\r\n\r\n          <Particle Particle={'CO'} value={(quality.co / 1000).toFixed(2)} color={getCoColor((quality.co / 1000).toFixed(2))} />\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AirQuality\r\n","import { useState,useEffect } from 'react'\r\nimport Condition from './Condition'\r\nimport { FaWind, FaSun } from 'react-icons/fa'\r\nimport { WiHumidity,WiRainMix } from 'react-icons/wi'\r\nimport { FiSunrise, FiSunset } from 'react-icons/fi'\r\nimport AirQuality from './AirQuality'\r\n\r\nconst Conditions = ({ data }) => {\r\n    const today = data.forecast.forecastday[0]\r\n    const [city, setCity] = useState('Tehran, Iran')\r\n\r\n    useEffect(() => {\r\n        setCity(data.location.name)\r\n    }, [data])\r\n    \r\n    return (\r\n        <div className='conditions-container'>\r\n            <h2>Conditions</h2>\r\n            <div className='conditions'>\r\n\r\n                <Condition\r\n                    icon={<FaWind size={18} style={{ color: '#42cc6a' }} />}\r\n                    data={`${Math.round(data.current['wind_kph'])} km/h`}\r\n                    text='Wind'\r\n                    bgColor='#aff5b1'\r\n                />\r\n                <Condition\r\n                    icon={<WiRainMix size={30} style={{ color: '#43a4e4' }} />}\r\n                    data={`${today.day['daily_chance_of_rain']}%`}\r\n                    text='Rain'\r\n                    bgColor='#add6f5'\r\n                />\r\n                <Condition\r\n                    icon={<WiHumidity size={30} color='#adafb6' />}\r\n                    data={`${data.current.humidity}%`}\r\n                    text='Humidity'\r\n                    bgColor='#eeeeee'\r\n                />\r\n                <Condition\r\n                    icon={<FaSun size={20} color='#ddb458' />}\r\n                    data={data.current.uv}\r\n                    text='UV Index'\r\n                    bgColor='#f7ddac'\r\n                />\r\n                <Condition\r\n                    icon={<FiSunrise size={30} color='#E68319' />}\r\n                    data={today.astro.sunrise.slice(0,5)}\r\n                    text='Sunrise'\r\n                />\r\n                <Condition\r\n                    icon={<FiSunset size={30} color='#F2A807' />}\r\n                    data={today.astro.sunset.slice(0,5)}\r\n                    text='Sunset'\r\n                />\r\n                \r\n                {<AirQuality city={city} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Conditions\r\n\r\n","import React from 'react'\r\nimport Hourly from './Hourly'\r\nimport Daily from './Daily'\r\nimport Conditions from './Conditions'\r\n\r\nconst Data = ({ data,tempUnit }) => {\r\n    return (\r\n        <div className='data'>\r\n            <Hourly data={data} tempUnit={tempUnit} />\r\n            <div className='flex-wrapper'>\r\n                <Daily data={data} tempUnit={tempUnit} />\r\n                <Conditions data={data} tempUnit={tempUnit} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Data\r\n","import React from 'react'\r\nimport { FaCaretDown, FaCaretUp } from 'react-icons/fa'\r\nimport moment from 'moment'\r\nconst Current = ({ data,tempUnit }) => {\r\n    const today = data.forecast.forecastday[0]\r\n    const m = moment(data.location.localtime, 'YYYY-MM-DD HH:mm').format('dddd, MMM DD, YYYY')\r\n\r\n    return (\r\n        <div className='current'>\r\n\r\n            <div className='current-temp'>\r\n                <div>\r\n                    <img src={data.current.condition.icon} alt='icon' />\r\n                </div>\r\n                <div>\r\n                    <h1>{Math.round(data.current[`temp_${tempUnit}`])}°{tempUnit.toUpperCase()}</h1>\r\n                </div>\r\n            </div>\r\n            <div className='condition'>{data.current.condition.text}</div>\r\n            <div>{m}</div>\r\n            <div>\r\n                <span><FaCaretUp /> {Math.round(today.day[`maxtemp_${tempUnit}`])}°</span>&nbsp;&nbsp;&nbsp;\r\n                <span><FaCaretDown /> {Math.round(today.day[`mintemp_${tempUnit}`])}°</span>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Current\r\n// .toDateString().split(' ').join(', ')","import Search from './components/Search'\r\nimport Data from './components/Data'\r\nimport Current from './components/Current'\r\nimport { useState,useEffect } from 'react'\r\n\r\nfunction App() {\r\n  const [city, setCity] = useState('')\r\n  const [data, setData] = useState('')\r\n  const [matches, setMatches] = useState([])\r\n  const [tempUnit, setTempUnit] = useState('c')\r\n  useEffect(() => {\r\n    const noPosition = () => {\r\n      fetchData('tehran')\r\n    }\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        position => {\r\n          fetchDataByPostion(position.coords.latitude, position.coords.longitude)\r\n        },\r\n        error => {\r\n          console.error(error)\r\n          noPosition()\r\n        }, { enableHighAccuracy: true });\r\n    }\r\n    else {\r\n      noPosition()\r\n    }\r\n  }, [])\r\n\r\n  \r\n  const fetchData = (city) => {\r\n    fetch(`https://weatherapi-com.p.rapidapi.com/forecast.json?q=${city}&days=3`, {\r\n      \"method\": \"GET\",\r\n      \"headers\": {\r\n        \"x-rapidapi-key\": \"3927819375mshd44cfb360819a63p12aeabjsn863dc422f8df\",\r\n        \"x-rapidapi-host\": \"weatherapi-com.p.rapidapi.com\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setData(res)\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      })\r\n  }\r\n  const fetchDataByPostion = (lat, long) => {\r\n    fetch(`https://weatherapi-com.p.rapidapi.com/forecast.json?q=${lat}%2C${long}&days=3`, {\r\n      \"method\": \"GET\",\r\n      \"headers\": {\r\n        \"x-rapidapi-key\": \"3927819375mshd44cfb360819a63p12aeabjsn863dc422f8df\",\r\n        \"x-rapidapi-host\": \"weatherapi-com.p.rapidapi.com\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setData(res)\r\n      })\r\n  }\r\n  const handleChange = (text) => {\r\n    if (text.length > 3) {\r\n      fetch(`https://weatherapi-com.p.rapidapi.com/search.json?q=${text}`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-key\": \"3927819375mshd44cfb360819a63p12aeabjsn863dc422f8df\",\r\n          \"x-rapidapi-host\": \"weatherapi-com.p.rapidapi.com\"\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(response => {\r\n          setMatches(response)\r\n        })\r\n    }\r\n    else { setMatches([]) }\r\n    setCity(text)\r\n  }\r\n  const handleClick = (e) => {\r\n    setCity(e.target.textContent)\r\n    fetchData(e.target.textContent)\r\n    setMatches([])\r\n    setTimeout(() => {\r\n      setCity('')\r\n    }, 2000);\r\n  }\r\n  const handleBlur = (e) => {\r\n    setCity('')\r\n    setTimeout(() => {\r\n      setMatches([])\r\n    }, 200);\r\n  }\r\n  if (data)\r\n    return (\r\n      <div className='app' onClick={(e)=>console.log(e)}>\r\n        <div className='background'>\r\n          <header>\r\n            <Search data={data} city={city} matches={matches} handleBlur={handleBlur}\r\n              handleChange={handleChange} handleClick={handleClick} />\r\n            <div className='temp-unit'>\r\n              <button className={tempUnit === 'f' ? 'active' : ''} onClick={() => setTempUnit('f')}>F</button>\r\n              <button className={tempUnit === 'c' ? 'active' : ''} onClick={() => setTempUnit('c')}>C</button>\r\n            </div>\r\n          </header>\r\n          <Current data={data} tempUnit={tempUnit} />\r\n        </div>\r\n        <Data data={data} tempUnit={tempUnit} />\r\n      </div>\r\n    );\r\n  else\r\n    return <div>loading...</div>\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}