{"version":3,"sources":["components/Search.js","components/Hourly.js","components/Daily.js","components/Condition.js","components/AirQuality.js","components/Conditions.js","components/Data.js","components/Current.js","App.js","reportWebVitals.js","index.js"],"names":["Search","city","handleChange","matches","handleClick","handleBlur","data","useState","clas","setClas","className","onClick","type","value","placeholder","location","name","country","onChange","e","target","onBlur","map","m","i","Hourly","tempUnit","hours","forecast","forecastday","hours2","now","Date","localtime","getHours","document","querySelector","scrollLeft","hr","alt","src","condition","icon","Math","round","filter","Daily","next","slice","push","today","getDay","days","n","day","text","style","visibility","Condition","bgColor","backgroundColor","AirQuality","url","qualityIndex","setQualityIndex","getLabel","useEffect","fetch","then","res","json","aqi","chartData","datasets","borderWidth","rotation","options","cutout","events","plugins","tooltip","enabled","fontWeight","fontSize","opacity","width","borderBottom","Conditions","setCity","size","color","current","humidity","uv","astro","sunrise","sunset","Data","Current","d","toUpperCase","toDateString","split","join","App","setData","setMatches","setTempUnit","noPosition","fetchData","navigator","geolocation","getCurrentPosition","position","fetchDataByPostion","coords","latitude","longitude","error","console","enableHighAccuracy","catch","err","lat","long","log","setTimeout","length","response","textContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f355918.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { FaSearch,FaTimes } from 'react-icons/fa'\r\nconst Search = ({ city,handleChange,matches,handleClick,handleBlur,data }) => {\r\n    const [clas, setClas] = useState('zero')\r\n   \r\n    return (\r\n        <div className='search-container' >\r\n            <button className='search-button' onClick={() => {clas==='full' ? setClas('zero') : setClas('full')}} >\r\n                <FaSearch className='icon' />\r\n            </button>\r\n            <div className='search' >\r\n                <input type='text' value={city} placeholder={`${data.location.name}, ${data.location.country}`}\r\n                      className={clas} onChange={e => handleChange(e.target.value)} onBlur={()=>handleBlur()} />\r\n                <button className='clear-button' onClick={()=>handleBlur()}><FaTimes /></button>\r\n                {matches && <div className='matches-container'>{matches.map((m, i) =>\r\n                    <div onClick={e => handleClick(e)}\r\n                        key={i}>{m.name}</div>)}\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport { FaChevronRight,FaChevronLeft } from 'react-icons/fa'\r\nconst Hourly = ({ data,tempUnit }) => {\r\n    const hours = data.forecast.forecastday[0]['hour']\r\n    const hours2 = data.forecast.forecastday[1]['hour']\r\n\r\n    const n = new Date(data.location.localtime)\r\n    const now = n.getHours()\r\n\r\n\r\n    const scrollRight = () => {\r\n        if(document.querySelector('.hourly')) {\r\n            const hourly = document.querySelector('.hourly')\r\n            hourly.scrollLeft += 450\r\n        }\r\n    }\r\n    const scrollLeft = () => {\r\n        if(document.querySelector('.hourly')){\r\n            const hourly = document.querySelector('.hourly')\r\n            hourly.scrollLeft -= 450\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='hourly-container'>\r\n                <h2>Hourly</h2>\r\n                <div className='scroll-container'>\r\n                    <button onClick={scrollLeft} ><FaChevronLeft /></button>\r\n                    <div className='hourly'>\r\n                        {hours.map((hr, i) =>\r\n                            <div key={i}>\r\n                                <div><img alt='condition' src={hr.condition.icon} /></div>\r\n                                <div>{Math.round(hr[`temp_${tempUnit}`])}°</div>\r\n                                <div>{i === now ? 'Now' : (i === 12 ? '12PM' : (i < 12 ? i + 'AM' : (i - 12) + 'PM'))}</div>\r\n                            </div>).filter((hr, i) => i >= now)}\r\n                        {hours2.map((hr, i) =>\r\n                            <div key={i}>\r\n                                <div><img alt='condition' src={hr.condition.icon} /></div>\r\n                                <div>{Math.round(hr[`temp_${tempUnit}`])}°</div>\r\n                                <div>{i === 12 ? '12PM' : (i === 0 ? '12AM' : (i < 12 ? i + 'AM' : (i - 12) + 'PM'))}</div>\r\n                            </div>).filter((hr, i) => i < now)}\r\n                    </div>\r\n                    <button onClick={scrollRight} ><FaChevronRight /></button>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hourly\r\n","import React from 'react'\r\nimport { FaTint } from 'react-icons/fa'\r\n\r\nconst Daily = ({ data,tempUnit }) => {\r\n    const next = data.forecast.forecastday.slice(1)\r\n    next.push(data.forecast.forecastday[1])\r\n    next.push(data.forecast.forecastday[0])\r\n    next.push(data.forecast.forecastday[2])\r\n\r\n    const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\",\r\n        \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\"];\r\n    const today = new Date(data.location.localtime).getDay()\r\n    const days = dayNames.slice(today + 1, today + 6)\r\n\r\n    return (\r\n        <div className='daily-container'>\r\n            <h2>Daily</h2>\r\n            <div className='daily'>\r\n                {next.map((n, i) =>\r\n                    <div key={i}>\r\n                        <div className='left'>\r\n                            <img alt='condition' src={n.day.condition.icon} />\r\n                        </div>\r\n                        <div>\r\n                            <div >{days[i]}</div>\r\n                            <div className='condition'>{n.day.condition.text}</div>\r\n                        </div>\r\n                        <div style={{ visibility: n.day['daily_chance_of_rain'] > 0 ? 'visible' : 'hidden' }}>\r\n                            <FaTint className='rain' />{n.day['daily_chance_of_rain']}%\r\n                        </div>\r\n                        <div>\r\n                            <span className='transparent'>{Math.round(n.day[`mintemp_${tempUnit}`])}°</span>/\r\n                            {Math.round(n.day[`maxtemp_${tempUnit}`])}°\r\n                        </div>\r\n\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Daily\r\n","import React from 'react'\r\n\r\nconst Condition = ({ icon, data, text, bgColor }) => {\r\n    return (\r\n        <div>\r\n            <div className='icon-wrapper'\r\n                style={{ backgroundColor: bgColor }}>\r\n                {icon}\r\n            </div>\r\n            <div className='condition-data'>\r\n                <div>{data}</div>\r\n                <div>{text}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Condition\r\n","import { useEffect, useState } from 'react'\r\nimport { Doughnut } from 'react-chartjs-2'\r\n\r\nconst AirQuality = ({ city }) => {\r\n\r\n  const url = `https://api.weatherbit.io/v2.0/current/airquality?city=${city}&key=5f590d6bda074732b090b04560e647c1`\r\n  const [qualityIndex, setQualityIndex] = useState('')\r\n  const getLabel = (qualityIndex) => {\r\n    if (qualityIndex < 51)\r\n      return ['Good', 'Air quality is satisfactory, and air pollution poses little or no risk.'];\r\n    else if (qualityIndex < 101)\r\n      return [\"Moderate\", \"Air quality is acceptable. However, there may be a risk for some people, particularly those who are unusually sensitive to air pollution.\"];\r\n    else if (qualityIndex < 151)\r\n      return [\"Unhealthy for sensitive groups\", \"Members of sensitive groups may experience health effects. The general public is less likely to be affected.\"];\r\n    else if (qualityIndex < 201)\r\n      return [\"Unhealthy\", \"Some members of the general public may experience health effects; members of sensitive groups may experience more serious health effects.\"];\r\n    else if (qualityIndex < 301)\r\n      return [\"Very Unhealthy\", \"Health alert: The risk of health effects is increased for everyone.\"];\r\n  }\r\n  useEffect(() => {\r\n\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(res => setQualityIndex(res.data[0].aqi))\r\n  }, [city])\r\n\r\n  const chartData = {\r\n    datasets: [\r\n      {\r\n        data: [1, 1, 1, 1, 1, 1],\r\n        backgroundColor: [\r\n          'white',\r\n          getLabel(qualityIndex)[0] === 'Good' ? '#1cb422' : '#f3f3f3',\r\n          getLabel(qualityIndex)[0] === 'Moderate' ? 'rgb(254,254,0)' : '#f3f3f3',\r\n          getLabel(qualityIndex)[0] === 'Unhealthy for sensitive groups' ? 'rgb(255,126,0)' : '#f3f3f3',\r\n          getLabel(qualityIndex)[0] === 'Unhealthy' ? 'rgb(255,21,21)' : '#f3f3f3',\r\n          getLabel(qualityIndex)[0] === 'Very Unhealthy' ? 'rgb(176,58,117)' : '#f3f3f3',\r\n        ],\r\n        borderWidth: 0,\r\n        rotation: 150,\r\n      },\r\n    ],\r\n  }\r\n  const options = {\r\n    cutout: '75%',\r\n    events: [],\r\n    plugins: {\r\n      tooltip: { enabled: false }\r\n    }\r\n  }\r\n  return (\r\n    <div className='air-quality-container'>\r\n      <h2>Air Quality</h2>\r\n    <div className='air-quality'>\r\n      \r\n      <div>\r\n        <div className='icon-wrapper'>\r\n          <Doughnut data={chartData} options={options} />\r\n          <div>\r\n            <div style={{ fontWeight:'600',fontSize:'1.2em'}}>{qualityIndex}</div>\r\n            <div style={{fontSize:'.7em',fontWeight:'600',opacity:'.5' }}>AQI</div>\r\n          </div>\r\n        </div>\r\n        <div className='condition-data'>\r\n          <div>{getLabel(qualityIndex)[0]}</div>\r\n          <div>{getLabel(qualityIndex)[1]}</div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div style={{ width: '100%' }} >\r\n\r\n        <div>\r\n          <div style={{ fontSize:'1.4em', borderBottom: '2px solid rgba(0,0,0,.4)' }}>-</div>\r\n          <div>PM2</div>\r\n        </div>\r\n        <div>\r\n          <div style={{ fontSize:'1.4em', borderBottom: '2px solid #1cb422' }}>9</div>\r\n          <div>PM</div>\r\n        </div>\r\n        <div>\r\n          <div style={{ fontSize:'1.4em', borderBottom: '2px solid rgba(0,0,0,.4)' }}>-</div>\r\n          <div>SO2</div>\r\n        </div>\r\n        <div>\r\n          <div style={{ fontSize:'1.4em', borderBottom: '2px solid rgba(0,0,0,.4)' }}>-</div>\r\n          <div>NO2</div>\r\n        </div>\r\n        <div>\r\n          <div style={{ fontSize:'1.4em', borderBottom: '2px solid rgba(0,0,0,.4)' }}>-</div>\r\n          <div>O3</div>\r\n        </div>\r\n        <div>\r\n          <div style={{ fontSize:'1.4em', borderBottom: '2px solid rgba(0,0,0,.4)' }}>-</div>\r\n          <div>CO</div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AirQuality\r\n","import { useState,useEffect } from 'react'\r\nimport Condition from './Condition'\r\nimport { FaWind, FaSun } from 'react-icons/fa'\r\nimport { WiHumidity,WiRainMix } from 'react-icons/wi'\r\nimport { FiSunrise, FiSunset } from 'react-icons/fi'\r\nimport AirQuality from './AirQuality'\r\n\r\nconst Conditions = ({ data }) => {\r\n    const today = data.forecast.forecastday[0]\r\n    const [city, setCity] = useState('Tehran, Iran')\r\n\r\n    useEffect(() => {\r\n        setCity(data.location.name)\r\n    }, [data])\r\n    \r\n    return (\r\n        <div className='conditions-container'>\r\n            <h2>Conditions</h2>\r\n            <div className='conditions'>\r\n\r\n                <Condition\r\n                    icon={<FaWind size={18} style={{ color: '#42cc6a' }} />}\r\n                    data={`${Math.round(data.current['wind_kph'])} km/h`}\r\n                    text='Wind'\r\n                    bgColor='#aff5b1'\r\n                />\r\n                <Condition\r\n                    icon={<WiRainMix size={30} style={{ color: '#43a4e4' }} />}\r\n                    data={`${today.day['daily_chance_of_rain']}%`}\r\n                    text='Rain'\r\n                    bgColor='#add6f5'\r\n                />\r\n                <Condition\r\n                    icon={<WiHumidity size={30} color='#adafb6' />}\r\n                    data={`${data.current.humidity}%`}\r\n                    text='Humidity'\r\n                    bgColor='#eeeeee'\r\n                />\r\n                <Condition\r\n                    icon={<FaSun size={20} color='#ddb458' />}\r\n                    data={data.current.uv}\r\n                    text='UV Index'\r\n                    bgColor='#f7ddac'\r\n                />\r\n                <Condition\r\n                    icon={<FiSunrise size={30} color='#E68319' />}\r\n                    data={today.astro.sunrise.slice(0,5)}\r\n                    text='Sunrise'\r\n                />\r\n                <Condition\r\n                    icon={<FiSunset size={30} color='#F2A807' />}\r\n                    data={today.astro.sunset.slice(0,5)}\r\n                    text='Sunset'\r\n                />\r\n                \r\n                {<AirQuality city={city} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Conditions\r\n\r\n","import React from 'react'\r\nimport Hourly from './Hourly'\r\nimport Daily from './Daily'\r\nimport Conditions from './Conditions'\r\n\r\nconst Data = ({ data,tempUnit }) => {\r\n    return (\r\n        <div className='data'>\r\n            <Hourly data={data} tempUnit={tempUnit} />\r\n            <div className='flex-wrapper'>\r\n                <Daily data={data} tempUnit={tempUnit} />\r\n                <Conditions data={data} tempUnit={tempUnit} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Data\r\n","import React from 'react'\r\nimport { FaCaretDown, FaCaretUp } from 'react-icons/fa'\r\n\r\nconst Current = ({ data,tempUnit }) => {\r\n    const today = data.forecast.forecastday[0]\r\n    const d = new Date(data.location.localtime)\r\n\r\n    return (\r\n        <div className='current'>\r\n\r\n            <div className='current-temp'>\r\n                <div>\r\n                    <img src={data.current.condition.icon} alt='icon' />\r\n                </div>\r\n                <div>\r\n                    <h1>{Math.round(data.current[`temp_${tempUnit}`])}°{tempUnit.toUpperCase()}</h1>\r\n                </div>\r\n            </div>\r\n            <div className='condition'>{data.current.condition.text}</div>\r\n            <div>{d.toDateString().split(' ').join(', ')}</div>\r\n            <div>\r\n                <span><FaCaretUp /> {Math.round(today.day[`maxtemp_${tempUnit}`])}°</span>&nbsp;&nbsp;&nbsp;\r\n                <span><FaCaretDown /> {Math.round(today.day[`mintemp_${tempUnit}`])}°</span>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Current\r\n","import Search from './components/Search'\r\nimport Data from './components/Data'\r\nimport Current from './components/Current'\r\nimport { useState,useEffect } from 'react'\r\n\r\nfunction App() {\r\n  const [city, setCity] = useState('')\r\n  const [data, setData] = useState('')\r\n  const [matches, setMatches] = useState([])\r\n  const [tempUnit, setTempUnit] = useState('c')\r\n  useEffect(() => {\r\n    const noPosition = () => {\r\n      fetchData('tehran')\r\n    }\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        position => {\r\n          fetchDataByPostion(position.coords.latitude, position.coords.longitude)\r\n        },\r\n        error => {\r\n          console.error(error)\r\n          noPosition()\r\n        }, { enableHighAccuracy: true });\r\n    }\r\n    else {\r\n      noPosition()\r\n    }\r\n  }, [])\r\n\r\n  \r\n  const fetchData = (city) => {\r\n    fetch(`https://weatherapi-com.p.rapidapi.com/forecast.json?q=${city}&days=3`, {\r\n      \"method\": \"GET\",\r\n      \"headers\": {\r\n        \"x-rapidapi-key\": \"3927819375mshd44cfb360819a63p12aeabjsn863dc422f8df\",\r\n        \"x-rapidapi-host\": \"weatherapi-com.p.rapidapi.com\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setData(res)\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      })\r\n  }\r\n  const fetchDataByPostion = (lat, long) => {\r\n    fetch(`https://weatherapi-com.p.rapidapi.com/forecast.json?q=${lat}%2C${long}&days=3`, {\r\n      \"method\": \"GET\",\r\n      \"headers\": {\r\n        \"x-rapidapi-key\": \"3927819375mshd44cfb360819a63p12aeabjsn863dc422f8df\",\r\n        \"x-rapidapi-host\": \"weatherapi-com.p.rapidapi.com\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setData(res)\r\n      })\r\n  }\r\n  const handleChange = (text) => {\r\n    if (text.length > 3) {\r\n      fetch(`https://weatherapi-com.p.rapidapi.com/search.json?q=${text}`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-key\": \"3927819375mshd44cfb360819a63p12aeabjsn863dc422f8df\",\r\n          \"x-rapidapi-host\": \"weatherapi-com.p.rapidapi.com\"\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(response => {\r\n          setMatches(response)\r\n        })\r\n    }\r\n    else { setMatches([]) }\r\n    setCity(text)\r\n  }\r\n  const handleClick = (e) => {\r\n    setCity(e.target.textContent)\r\n    fetchData(e.target.textContent)\r\n    setMatches([])\r\n    setTimeout(() => {\r\n      setCity('')\r\n    }, 2000);\r\n  }\r\n  const handleBlur = (e) => {\r\n    setCity('')\r\n    setTimeout(() => {\r\n      setMatches([])\r\n    }, 200);\r\n  }\r\n  if (data)\r\n    return (\r\n      <div className='app' onClick={(e)=>console.log(e)}>\r\n        <div className='background'>\r\n          <header>\r\n            <Search data={data} city={city} matches={matches} handleBlur={handleBlur}\r\n              handleChange={handleChange} handleClick={handleClick} />\r\n            <div className='temp-unit'>\r\n              <button className={tempUnit === 'f' ? 'active' : ''} onClick={() => setTempUnit('f')}>F</button>\r\n              <button className={tempUnit === 'c' ? 'active' : ''} onClick={() => setTempUnit('c')}>C</button>\r\n            </div>\r\n          </header>\r\n          <Current data={data} tempUnit={tempUnit} />\r\n        </div>\r\n        <Data data={data} tempUnit={tempUnit} />\r\n      </div>\r\n    );\r\n  else\r\n    return <div>loading...</div>\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}