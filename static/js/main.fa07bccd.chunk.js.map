{"version":3,"sources":["components/Search.js","components/Current.js","components/Hourly.js","components/Daily.js","components/Condition.js","components/Particle.js","components/AirQuality.js","components/Conditions.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["Search","city","handleChange","matches","handleClick","handleBlur","data","useState","clas","setClas","className","onClick","size","type","value","placeholder","location","name","country","onChange","e","target","onBlur","map","m","i","Current","tempUnit","today","forecast","forecastday","moment","localtime","format","src","current","condition","icon","alt","Math","round","toUpperCase","text","day","Hourly","hours","hours2","now","document","querySelector","scrollLeft","hr","filter","Daily","next","slice","push","date","n","clone","add","style","visibility","Condition","bgColor","backgroundColor","Particle","color","fontSize","borderBottom","AirQuality","co","pm10","quality","index","aqi","colors","particles","reduce","obj","particle","iaqi","v","getLabel","getPm25Color","pm25","chartData","datasets","borderWidth","rotation","options","cutout","events","plugins","tooltip","enabled","Conditions","setQuality","useEffect","a","fetch","then","res","json","response1","region","response2","status","fetchData","humidity","uv","astro","sunrise","sunset","App","setCity","setData","setMatches","setTempUnit","noPosition","navigator","geolocation","getCurrentPosition","position","fetchDataByPostion","coords","latitude","longitude","error","console","enableHighAccuracy","catch","err","lat","long","setTimeout","length","textContent","height","display","justifyContent","alignItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.fa07bccd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { FaSearch,FaTimes } from 'react-icons/fa'\r\nconst Search = ({ city,handleChange,matches,handleClick,handleBlur,data }) => {\r\n    const [clas, setClas] = useState('no-border')\r\n   \r\n    return (\r\n        <div className='search-container' >\r\n            <button className='search-button' onClick={() => {clas==='border' ? setClas('no-border') : setClas('border')}} >\r\n                <FaSearch className='icon' size={15} />\r\n            </button>\r\n            <div className='search' >\r\n                <input type='text' value={city} placeholder={`${data.location.name}, ${data.location.country}`}\r\n                      className={clas} onChange={e => handleChange(e.target.value)} onBlur={()=>handleBlur()} />\r\n                <button className='clear-button' onClick={()=>handleBlur()}><FaTimes size={13}/></button>\r\n                {matches && <div className='matches-container'>{matches.map((m, i) =>\r\n                    <div onClick={e => handleClick(e)}\r\n                        key={i}>{m.name}</div>)}\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import { FaCaretDown, FaCaretUp } from 'react-icons/fa'\r\nimport moment from 'moment'\r\n\r\nconst Current = ({ data,tempUnit }) => {\r\n    const today = data.forecast.forecastday[0]\r\n    const m = moment(data.location.localtime, 'YYYY-MM-DD HH:mm').format('dddd, MMM DD, YYYY')\r\n\r\n    return (\r\n        <div className='current'>\r\n\r\n            <div className='temp'>\r\n                <div className='icon'>\r\n                    <img src={data.current.condition.icon} alt='icon' />\r\n                </div>\r\n                <div>\r\n                    <h1>{Math.round(data.current[`temp_${tempUnit}`])}°{tempUnit.toUpperCase()}</h1>\r\n                </div>\r\n            </div>\r\n            <div className='condition'>{data.current.condition.text}</div>\r\n            <div className='date'>{m}</div>\r\n            <div className='min-max'>\r\n                <span><FaCaretUp /> {Math.round(today.day[`maxtemp_${tempUnit}`])}°</span>&nbsp;&nbsp;&nbsp;\r\n                <span><FaCaretDown /> {Math.round(today.day[`mintemp_${tempUnit}`])}°</span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Current\r\n","import moment from 'moment'\r\nimport { FaChevronRight, FaChevronLeft } from 'react-icons/fa'\r\n\r\nconst Hourly = ({ data, tempUnit }) => {\r\n\r\n    const hours = data.forecast.forecastday[0]['hour']\r\n    const hours2 = data.forecast.forecastday[1]['hour']\r\n\r\n    const now = moment(data.location.localtime, 'YYYY-MM-DD HH:mm').format('HH')\r\n\r\n    const scrollRight = () => {\r\n        if (document.querySelector('.hourly')) {\r\n            const hourly = document.querySelector('.hourly')\r\n            hourly.scrollLeft += 450\r\n        }\r\n    }\r\n    const scrollLeft = () => {\r\n        if (document.querySelector('.hourly')) {\r\n            const hourly = document.querySelector('.hourly')\r\n            hourly.scrollLeft -= 450\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className='hourly-container'>\r\n            <h2>Hourly</h2>\r\n            <div className='scroll-container'>\r\n                <button onClick={scrollLeft}><FaChevronLeft /></button>\r\n                <div className='hourly'>\r\n                    {hours.map((hr, i) =>\r\n                        <div className='hour' key={i}>\r\n                            <div><img alt='condition' src={hr.condition.icon} /></div>\r\n                            <div className='temp'>{Math.round(hr[`temp_${tempUnit}`])}°</div>\r\n                            <div className='time'>{i === now ? 'Now' : (i === 12 ? '12PM' : (i < 12 ? i + 'AM' : (i - 12) + 'PM'))}</div>\r\n                        </div>).filter((hr, i) => i >= now)}\r\n                    {hours2.map((hr, i) =>\r\n                        <div className='hour' key={i}>\r\n                            <div><img alt='condition' src={hr.condition.icon} /></div>\r\n                            <div className='temp'>{Math.round(hr[`temp_${tempUnit}`])}°</div>\r\n                            <div className='time'>{i === 12 ? '12PM' : (i === 0 ? '12AM' : (i < 12 ? i + 'AM' : (i - 12) + 'PM'))}</div>\r\n                        </div>).filter((hr, i) => i < now)}\r\n                </div>\r\n                <button onClick={scrollRight}><FaChevronRight /></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hourly\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { FaTint } from 'react-icons/fa'\r\n\r\nconst Daily = ({ data, tempUnit }) => {\r\n    \r\n    const next = data.forecast.forecastday.slice(1)\r\n    next.push(data.forecast.forecastday[1])\r\n    next.push(data.forecast.forecastday[0])\r\n    next.push(data.forecast.forecastday[2])\r\n\r\n    const date = moment(data.location.localtime, 'YYYY-MM-DD HH:mm')\r\n   \r\n    return (\r\n        <div className='daily-container'>\r\n            <h2>Daily</h2>\r\n            <div className='daily'>\r\n                {next.map((n, i) =>\r\n\r\n                    <div className='day' key={i}>\r\n                        <div className='icon'>\r\n                            <img alt='condition' src={n.day.condition.icon} />\r\n                        </div>\r\n                        <div className='date-and-condition'>\r\n                            <div className='date'>{date.clone().add(i + 1, 'd').format('dddd')}</div>\r\n                            <div className='condition'>{n.day.condition.text}</div>\r\n                        </div>\r\n                        <div className='rain' style={{ visibility: n.day['daily_chance_of_rain'] > 0 ? 'visible' : 'hidden' }}>\r\n                            <FaTint className='rain' />{n.day['daily_chance_of_rain']}%\r\n                        </div>\r\n                        <div className='min-max'>\r\n                            <span>{Math.round(n.day[`mintemp_${tempUnit}`])}°</span>&nbsp;\r\n                            {Math.round(n.day[`maxtemp_${tempUnit}`])}°\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Daily\r\n","import React from 'react'\r\n\r\nconst Condition = ({ icon, data, text, bgColor }) => {\r\n    return (\r\n        <div className='condition'>\r\n            <div className='icon-wrapper'\r\n                style={{ backgroundColor: bgColor }}>\r\n                {icon}\r\n            </div>\r\n            <div className='condition-data'>\r\n                <div>{data}</div>\r\n                <div className='label'>{text}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Condition\r\n","import React from 'react'\r\n\r\nconst Particle = ({ color,value,Particle }) => {\r\n    return (\r\n        <div className='particle'>\r\n          <div style={{ fontSize:'1.2em', borderBottom: `2px solid ${color}` }}>{value}</div>\r\n          <div>{Particle}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Particle\r\n","import { Doughnut } from 'react-chartjs-2'\r\nimport Particle from './Particle'\r\n\r\nconst AirQuality = ({ quality }) => {\r\n\r\n  const index = quality.aqi || '-'\r\n  const colors = {\r\n    green: '#1cb422', yellow: 'rgb(254,254,0)', orange: 'rgb(255,126,0)',\r\n    red: 'rgb(255,21,21)', magenta: 'rgb(176,58,117)', grey: 'rgba(0,0,0,.4)', lightGrey: '#f3f3f3'\r\n  }\r\n  const array = ['pm25', 'pm10', 'co', 'no2', 'o3']\r\n\r\n  const particles = array.reduce((obj, particle) => (\r\n    { ...obj, [particle]: quality.iaqi?.[particle] ? quality.iaqi[particle].v : '-' }), {})\r\n\r\n  const getLabel = (aqi) =>\r\n    (aqi < 51 && ['Good', 'Air quality is satisfactory, and air pollution poses little or no risk.']) ||\r\n    (aqi < 101 && [\"Moderate\", \"Air quality is acceptable, there may be a risk for  those who are sensitive to air pollution.\"]) ||\r\n    (aqi < 151 && [\"Unhealthy for sensitive groups\", \"Members of sensitive groups may experience health effects.\"]) ||\r\n    (aqi < 201 && [\"Unhealthy for sensitive groups\", \"Members of sensitive groups may experience health effects.\"]) ||\r\n    (aqi < 301 && [\"Very Unhealthy\", \"Health alert: The risk of health effects is increased for everyone.\"]) ||\r\n    [\"Air quality index for this city is not available right now\", \"Data not available\"]\r\n\r\n  const getPm25Color = (pm25) =>\r\n    (pm25 < 51 && colors.green) || (pm25 < 101 && colors.yellow) || (pm25 < 151 && colors.orange) ||\r\n    (pm25 < 201 && colors.red) || (pm25 < 301 && colors.magenta) || colors.grey\r\n\r\n  const getPm10Color = (pm10) =>\r\n    (pm10 < 40 && colors.green) || (pm10 < 80 && colors.yellow) || (pm10 < 120 && colors.orange) ||\r\n    (pm10 < 300 && colors.red) || (pm10 >= 300 && colors.magenta) || colors.grey\r\n\r\n  const getCoColor = (co) =>\r\n    (co < 9 && colors.green) || (co < 10 && colors.yellow) || (co >= 10 && colors.orange) || colors.grey\r\n\r\n  const chartData = {\r\n    datasets: [\r\n      {\r\n        data: [1, 1, 1, 1, 1, 1],\r\n        backgroundColor: [\r\n          'white',\r\n          getLabel(index)[0] === 'Good' ? colors.green : colors.lightGrey,\r\n          getLabel(index)[0] === 'Moderate' ? colors.yellow : colors.lightGrey,\r\n          getLabel(index)[0] === 'Unhealthy for sensitive groups' ? colors.orange : colors.lightGrey,\r\n          getLabel(index)[0] === 'Unhealthy' ? colors.red : colors.lightGrey,\r\n          getLabel(index)[0] === 'Very Unhealthy' ? colors.magenta : colors.lightGrey\r\n        ],\r\n        borderWidth: 0,\r\n        rotation: 150,\r\n      },\r\n    ],\r\n  }\r\n  const options = {\r\n    cutout: '85%',\r\n    events: [],\r\n    plugins: {\r\n      tooltip: { enabled: false }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='air-quality-container'>\r\n      <h2>Air Quality</h2>\r\n\r\n      <div className='air-quality'>\r\n\r\n        <div className='quality-index'>\r\n          <div className='icon-wrapper'>\r\n            <Doughnut data={chartData} options={options} />\r\n            <div className='donut-overlay'>\r\n              <div className='index'>{index}</div>\r\n              <div className='label'>AQI</div>\r\n            </div>\r\n          </div>\r\n          <div className='index-data'>\r\n            <div className='index-label'>{getLabel(index)[0]}</div>\r\n            <div className='index-text'>{getLabel(index)[1]}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='particles'>\r\n          <Particle Particle='pm25' value={particles['pm25']} color={getPm25Color(particles['pm25'])} />\r\n          <Particle Particle='pm10' value={particles['pm10']} color={getPm10Color(particles['pm10'])} />\r\n          <Particle Particle='no2' value={particles['no2']} color={getPm25Color(particles['no2'])} />\r\n          <Particle Particle='O3' value={particles['o3']} color={getPm25Color(particles['o3'])} />\r\n          <Particle Particle='CO' value={particles['co']} color={getCoColor(particles['co'])} />\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AirQuality\r\n","import { useState, useEffect } from 'react'\r\nimport Condition from './Condition'\r\nimport AirQuality from './AirQuality'\r\nimport { FaWind, FaSun } from 'react-icons/fa'\r\nimport { WiHumidity, WiRainMix } from 'react-icons/wi'\r\nimport { FiSunrise, FiSunset } from 'react-icons/fi'\r\n\r\nconst Conditions = ({ data }) => {\r\n\r\n    const today = data.forecast.forecastday[0]\r\n\r\n    const [quality, setQuality] = useState('')\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const response1 = await fetch(`https://api.waqi.info/feed/${data.location.name}/?token=59279c91ec4c2ff95a7957e57269b2540e194f9a`)\r\n            .then(res=>res.json())\r\n            const response2 = await fetch(`https://api.waqi.info/feed/${data.location.region}/?token=59279c91ec4c2ff95a7957e57269b2540e194f9a`)\r\n            .then(res=>res.json())\r\n            setQuality((response1.status === 'ok' && response1.data) || \r\n            (response2.status === 'ok' && response2.data))\r\n        }\r\n        fetchData()\r\n    }, [data])\r\n\r\n    return (\r\n        <div className='conditions-container'>\r\n            <h2>Conditions</h2>\r\n            <div className='conditions'>\r\n\r\n                <Condition\r\n                    icon={<FaWind size={18} style={{ color: '#42cc6a' }} />}\r\n                    data={`${Math.round(data.current['wind_kph'])} km/h`}\r\n                    text='Wind'\r\n                    bgColor='#aff5b1'\r\n                />\r\n                <Condition\r\n                    icon={<WiRainMix size={30} style={{ color: '#43a4e4' }} />}\r\n                    data={`${today.day['daily_chance_of_rain']}%`}\r\n                    text='Rain'\r\n                    bgColor='#add6f5'\r\n                />\r\n                <Condition\r\n                    icon={<WiHumidity size={30} color='#adafb6' />}\r\n                    data={`${data.current.humidity}%`}\r\n                    text='Humidity'\r\n                    bgColor='#eeeeee'\r\n                />\r\n                <Condition\r\n                    icon={<FaSun size={20} color='#ddb458' />}\r\n                    data={data.current.uv}\r\n                    text='UV Index'\r\n                    bgColor='#f7ddac'\r\n                />\r\n                <Condition\r\n                    icon={<FiSunrise size={30} color='#E68319' />}\r\n                    data={today.astro.sunrise.slice(0, 5)}\r\n                    text='Sunrise'\r\n                />\r\n                <Condition\r\n                    icon={<FiSunset size={30} color='#F2A807' />}\r\n                    data={today.astro.sunset.slice(0, 5)}\r\n                    text='Sunset'\r\n                />\r\n\r\n                <AirQuality quality={quality} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Conditions\r\n\r\n","import { Default } from 'react-spinners-css';\r\nimport Search from './components/Search'\r\nimport Current from './components/Current'\r\nimport Hourly from './components/Hourly'\r\nimport Daily from './components/Daily'\r\nimport Conditions from './components/Conditions'\r\nimport { useState, useEffect } from 'react'\r\n\r\nfunction App() {\r\n  const [city, setCity] = useState('')\r\n  const [data, setData] = useState('')\r\n  const [matches, setMatches] = useState([])\r\n  const [tempUnit, setTempUnit] = useState('c')\r\n\r\n  useEffect(() => {\r\n    const noPosition = () => {\r\n      fetchData('tehran')\r\n    }\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        position => {\r\n          fetchDataByPostion(position.coords.latitude, position.coords.longitude)\r\n        },\r\n        error => {\r\n          console.error(error)\r\n          noPosition()\r\n        }, { enableHighAccuracy: true });\r\n    }\r\n    else {\r\n      noPosition()\r\n    }\r\n  }, [])\r\n\r\n  const fetchData = (city) => {\r\n    fetch(`https://weatherapi-com.p.rapidapi.com/forecast.json?q=${city}&days=3`, {\r\n      \"method\": \"GET\",\r\n      \"headers\": {\r\n        \"x-rapidapi-key\": \"3927819375mshd44cfb360819a63p12aeabjsn863dc422f8df\",\r\n        \"x-rapidapi-host\": \"weatherapi-com.p.rapidapi.com\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setData(res)\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      })\r\n  }\r\n  const fetchDataByPostion = (lat, long) => {\r\n    fetch(`https://weatherapi-com.p.rapidapi.com/forecast.json?q=${lat}%2C${long}&days=3`, {\r\n      \"method\": \"GET\",\r\n      \"headers\": {\r\n        \"x-rapidapi-key\": \"3927819375mshd44cfb360819a63p12aeabjsn863dc422f8df\",\r\n        \"x-rapidapi-host\": \"weatherapi-com.p.rapidapi.com\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setData(res)\r\n      })\r\n  }\r\n  const handleChange = (text) => {\r\n    if (text.length > 3) {\r\n      fetch(`https://weatherapi-com.p.rapidapi.com/search.json?q=${text}`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-key\": \"3927819375mshd44cfb360819a63p12aeabjsn863dc422f8df\",\r\n          \"x-rapidapi-host\": \"weatherapi-com.p.rapidapi.com\"\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          setMatches(res)\r\n        })\r\n    }\r\n    else setMatches([]) \r\n    setCity(text)\r\n  }\r\n  const handleClick = (e) => {\r\n    setCity(e.target.textContent)\r\n    fetchData(e.target.textContent)\r\n    setMatches([])\r\n    setTimeout(() => {\r\n      setCity('')\r\n    }, 2000);\r\n  }\r\n  const handleBlur = (e) => {\r\n    setCity('')\r\n    setTimeout(() => {\r\n      setMatches([])\r\n    }, 200);\r\n  }\r\n\r\n  if (data)\r\n    return (\r\n      <div className='app'>\r\n        <div className='background'>\r\n          <header>\r\n            <Search data={data} city={city} matches={matches} handleBlur={handleBlur}\r\n              handleChange={handleChange} handleClick={handleClick} />\r\n            <div className='temp-unit'>\r\n              <button className={tempUnit === 'f' ? 'active' : ''} onClick={() => setTempUnit('f')}>F</button>\r\n              <button className={tempUnit === 'c' ? 'active' : ''} onClick={() => setTempUnit('c')}>C</button>\r\n            </div>\r\n          </header>\r\n          <Current data={data} tempUnit={tempUnit} />\r\n        </div>\r\n\r\n        <div className='data'>\r\n          <Hourly data={data} tempUnit={tempUnit} />\r\n          <div className='flex-wrapper'>\r\n            <Daily data={data} tempUnit={tempUnit} />\r\n            <Conditions data={data} tempUnit={tempUnit} />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  else\r\n    return <div style={{ height:'100vh', display:'flex',justifyContent:'center',alignItems:'center' }}>\r\n    <Default size={100} />\r\n    </div>\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}